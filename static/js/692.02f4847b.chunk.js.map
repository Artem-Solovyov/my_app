{"version":3,"file":"static/js/692.02f4847b.chunk.js","mappings":"0KACA,G,QAA0B,0BAA1B,EAAkE,8BAAlE,EAAyG,wBAAzG,EAA0I,wBAA1I,EAA6K,0BAA7K,EAAiN,yB,mBCejN,EAPwC,SAACA,GACvC,OAAQ,gBAAKC,UAAS,UAAKC,EAAL,YAAiBA,GAA/B,UACN,SAAC,KAAD,CAASC,GAAI,YAAcH,EAAMI,GAAjC,SAAsCJ,EAAMK,QAE/C,ECJD,EAHqC,SAACL,GACpC,OAAQ,gBAAKC,UAAWC,EAAhB,SAA4BF,EAAMM,SAC3C,E,6BC8CKC,GAAsBC,EAAAA,EAAAA,GAAyC,CAACC,KAAM,wBAAhDD,EAZmE,SAACR,GAC9F,OACE,kBAAMU,SAAUV,EAAMW,aAAtB,WACE,0BACGC,EAAAA,EAAAA,IAAuC,qBAAsB,iBAAkB,CAACC,EAAAA,GAAUC,EAAAA,EAAAA,GAAiB,KAAMC,EAAAA,OAEpH,0BACE,yCAIP,IAED,EArCwC,SAACf,GAEvC,IAAIgB,EAAiBhB,EAAMiB,YAAYC,QAAQC,KAAI,SAAAC,GAAC,OAAI,SAAC,EAAD,CAAYhB,GAAIgB,EAAEhB,GAAeC,KAAMe,EAAEf,MAAde,EAAEhB,GAAjC,IAEhDiB,EAAkBrB,EAAMiB,YAAYK,SAASH,KAAI,SAAAI,GAAC,OAAI,SAAC,EAAD,CAASjB,QAASiB,EAAEjB,SAAciB,EAAEnB,GAAxC,IAOtD,OACE,iBAAKH,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAhB,SACGc,KAEH,iBAAKf,UAAWC,EAAhB,UACGmB,GACD,SAACd,EAAD,CAAqBG,SAZP,SAACc,GAEnBxB,EAAMyB,WAAWD,EAAOE,eACzB,SAYF,E,oBCzBD,GAAeC,E,QAAAA,KACXC,EAAAA,EAAAA,KALoB,SAACC,GAAD,MAA0B,CAChDZ,YAAaY,EAAMZ,YADG,IAKb,UAAsBa,EAAAA,IAC7BC,EAAAA,EAFJ,CAGEC,E","sources":["webpack://my_app/./src/components/Dialogs/Dialogs.module.css?1b2e","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/MessageItem/Message.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__RtiVG\",\"dialogsItems\":\"Dialogs_dialogsItems__8MPN+\",\"dialog\":\"Dialogs_dialog__UPTPx\",\"active\":\"Dialogs_active__8gQvT\",\"messages\":\"Dialogs_messages__OccM-\",\"message\":\"Dialogs_message__YTTKr\"};","import React from \"react\";\r\nimport s from './../Dialogs.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n  id: number\r\n  name: string\r\n}\r\n\r\nconst DialogItem: React.FC<PropsType> = (props) => {\r\n  return (<div className={`${s.dialog} ${s.active}`}>\r\n    <NavLink to={'/dialogs/' + props.id}>{props.name}</NavLink>\r\n  </div>)\r\n}\r\n\r\n\r\nexport default DialogItem","import React from \"react\";\r\nimport s from './../Dialogs.module.css'\r\n\r\ntype PropsType = {\r\n  message: string\r\n}\r\nconst Message: React.FC<PropsType> = (props) => {\r\n  return (<div className={s.message}>{props.message}</div>)\r\n}\r\nexport default Message","import React from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./MessageItem/Message\";\r\nimport {InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {createField, Textarea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\nimport {InitialStateType} from \"../../redux/dialogs_reducer\";\r\n\r\nexport type OwnPropsType = {\r\n  dialogsPage: InitialStateType\r\n  addMessage: (messageText: string) => void\r\n}\r\nexport type NewMessageFormType = {\r\n  newMessageBody: string\r\n}\r\ntype PropsType =  {}\r\ntype NewMessageValuesKeysTypes = Extract<keyof NewMessageFormType, string>\r\nconst Dialogs: React.FC<OwnPropsType> = (props) => {\r\n\r\n  let dialogElements = props.dialogsPage.dialogs.map(d => <DialogItem id={d.id} key={d.id} name={d.name}></DialogItem>)\r\n\r\n  let messageElements = props.dialogsPage.messages.map(m => <Message message={m.message} key={m.id}></Message>)\r\n\r\n  let addNewMessage = (values: {newMessageBody: string}) => {\r\n\r\n    props.addMessage(values.newMessageBody)\r\n  }\r\n\r\n  return (\r\n    <div className={s.dialogs}>\r\n      <div className={s.dialogsItems}>\r\n        {dialogElements}\r\n      </div>\r\n      <div className={s.messages}>\r\n        {messageElements}\r\n        <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n      </div>\r\n    </div>)\r\n}\r\n\r\n\r\nconst AddMessageForm: React.FC<InjectedFormProps<NewMessageFormType, PropsType> & PropsType> = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        {createField<NewMessageValuesKeysTypes>(\"Enter your message\", 'newMessageBody', [required, maxLengthCreator(50)], Textarea)}\r\n      </div>\r\n      <div>\r\n        <button>Send</button>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\nconst AddMessageFormRedux = reduxForm<NewMessageFormType, PropsType>({form: 'dialogAddMessageForm'})(AddMessageForm)\r\nexport default Dialogs","import React, {Component, ComponentType} from \"react\";\r\nimport {actions} from \"../../redux/dialogs_reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {AppStateType} from \"../../redux/redux_store\";\r\n\r\n\r\n\r\nconst mapStateToProps = (state: AppStateType) => ({\r\n  dialogsPage: state.dialogsPage,\r\n})\r\n\r\nexport default compose<ComponentType>(\r\n    connect(mapStateToProps, {...actions}),\r\n    withAuthRedirect,\r\n)(Dialogs)"],"names":["props","className","s","to","id","name","message","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","createField","required","maxLengthCreator","Textarea","dialogElements","dialogsPage","dialogs","map","d","messageElements","messages","m","values","addMessage","newMessageBody","compose","connect","state","actions","withAuthRedirect","Dialogs"],"sourceRoot":""}